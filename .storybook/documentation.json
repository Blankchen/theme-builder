{
    "pipes": [],
    "interfaces": [
        {
            "name": "ExternalLink",
            "id": "interface-ExternalLink-d46ab62ea3129c8e3e121cc1ac0b4064",
            "file": "projects/theme-builder/src/app/services/dynamic-loader.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { from, throwError, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\ninterface ExternalLink {\n  name: string;\n  src: string;\n  integrity: string;\n}\n\ninterface LoadTemp {\n  [key: string]: {\n    loaded: boolean,\n    src: string,\n    integrity: string,\n  };\n}\n\n// name as id\nexport const loaderStore: ExternalLink[] = [\n  // { name: 'css', src: 'https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css', integrity: 'sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I' },\n  { name: 'jquery', src: 'https://code.jquery.com/jquery-3.5.1.slim.min.js', integrity: 'sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' },\n  { name: 'popper', src: 'https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js', integrity: 'sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN' },\n  { name: 'bootstrap', src: 'https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js', integrity: 'sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV' },\n\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicLoaderService {\n  private loadTemp: LoadTemp = {};\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    loaderStore.forEach((x: ExternalLink) => {\n      this.loadTemp[x.name] = {\n        loaded: false,\n        src: x.src,\n        integrity: x.integrity\n      };\n    });\n  }\n\n  isLoad$() {\n    const promises: any[] = [];\n    loaderStore.forEach((x) => promises.push(this.loadAll(x.name)));\n    return from(Promise.all(promises)).pipe(\n      map(_ => {\n        return of(true);\n      }),\n      catchError((err: any) => {\n        console.error(err);\n        return throwError(false);\n      })\n    );\n  }\n\n  removeAll() {\n    loaderStore.forEach((x) => this.document.getElementById(x.name).remove());\n  }\n\n  private loadAll(name: string) {\n    return new Promise((resolve, reject) => {\n      if (this.loadTemp[name].loaded) {\n        resolve({ script: name, loaded: true, status: 'Already Loaded' });\n      }\n      const head = this.document.getElementsByTagName('head')[0];\n      const isScript = this.loadTemp[name].src.endsWith('.js');\n      const scriptOrStyle = (isScript ? this.loadScript(name) : this.loadStyle(name)) as any;\n\n      scriptOrStyle.onload = () => {\n        this.loadTemp[name].loaded = true;\n        resolve({ script: name, loaded: true, status: 'Loaded' });\n      };\n\n      scriptOrStyle.onerror = (error: any) => resolve({ script: name, loaded: false, status: 'Loaded' });\n      head.appendChild(scriptOrStyle);\n    });\n  }\n\n  private loadScript(name: string) {\n    const script = document.createElement('script');\n    script.id = name;\n    script.type = 'text/javascript';\n    script.crossOrigin = 'anonymous';\n    script.integrity = this.loadTemp[name].integrity;\n    script.src = this.loadTemp[name].src;\n    return script;\n  }\n\n  private loadStyle(name: string) {\n    const style = document.createElement('link');\n    style.id = name;\n    style.rel = 'stylesheet';\n    style.crossOrigin = 'anonymous';\n    style.integrity = this.loadTemp[name].integrity;\n    style.href = this.loadTemp[name].src;\n    return style;\n  }\n\n}\n",
            "properties": [
                {
                    "name": "integrity",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "src",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Input",
            "id": "interface-Input-47e4678f16858a7c7f5c919b5fbe8ad0",
            "file": "projects/theme-builder/src/app/shared/models/custom-properties.model.ts",
            "type": "interface",
            "sourceCode": "interface Input {\n  title?: string;\n  // example code\n  code?: string;\n  // file path\n  path?: string;\n}\n\nexport class CustomProperties {\n  title: string;\n  code: string;\n  // general code to copy\n  codeFunction: () => string;\n  path: string;\n  propertiesKeyList: string[] = [];\n  propertiesObj: object = {};\n\n  // load data from Storage model\n  loadData(...value) {\n    Object.assign(this, ...value);\n  }\n\n  generateCode() {\n    delete this.code;\n    this.code = this.codeFunction();\n  }\n\n  updateProperty(property: object) {\n    Object.assign(this.propertiesObj, property);\n  }\n\n  stringToProperties(source: string, splits: string[] = [',', ':']) {\n    const replaceList = ['!default', '\\\\s', '\\\\\"', '\\''].join('|');\n    const rowData = source.replace(new RegExp(replaceList, 'g'), '');\n    const dataList = rowData.split(splits[0]).filter(x => !!x);\n    this.propertiesKeyList = [];\n    this.propertiesObj = {};\n    dataList.forEach((x) => {\n      const [key, value] = x.split(splits[1]);\n      this.propertiesKeyList.push(key);\n      this.propertiesObj[key] = value;\n      return [key, value];\n    });\n  }\n\n  constructor(data: Input = {}) {\n    this.title = data.title || '';\n    this.code = data.code || '';\n    this.path = data.path || '';\n  }\n\n}\n",
            "properties": [
                {
                    "name": "code",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "path",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "LoadTemp",
            "id": "interface-LoadTemp-d46ab62ea3129c8e3e121cc1ac0b4064",
            "file": "projects/theme-builder/src/app/services/dynamic-loader.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { from, throwError, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\ninterface ExternalLink {\n  name: string;\n  src: string;\n  integrity: string;\n}\n\ninterface LoadTemp {\n  [key: string]: {\n    loaded: boolean,\n    src: string,\n    integrity: string,\n  };\n}\n\n// name as id\nexport const loaderStore: ExternalLink[] = [\n  // { name: 'css', src: 'https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css', integrity: 'sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I' },\n  { name: 'jquery', src: 'https://code.jquery.com/jquery-3.5.1.slim.min.js', integrity: 'sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' },\n  { name: 'popper', src: 'https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js', integrity: 'sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN' },\n  { name: 'bootstrap', src: 'https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js', integrity: 'sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV' },\n\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicLoaderService {\n  private loadTemp: LoadTemp = {};\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    loaderStore.forEach((x: ExternalLink) => {\n      this.loadTemp[x.name] = {\n        loaded: false,\n        src: x.src,\n        integrity: x.integrity\n      };\n    });\n  }\n\n  isLoad$() {\n    const promises: any[] = [];\n    loaderStore.forEach((x) => promises.push(this.loadAll(x.name)));\n    return from(Promise.all(promises)).pipe(\n      map(_ => {\n        return of(true);\n      }),\n      catchError((err: any) => {\n        console.error(err);\n        return throwError(false);\n      })\n    );\n  }\n\n  removeAll() {\n    loaderStore.forEach((x) => this.document.getElementById(x.name).remove());\n  }\n\n  private loadAll(name: string) {\n    return new Promise((resolve, reject) => {\n      if (this.loadTemp[name].loaded) {\n        resolve({ script: name, loaded: true, status: 'Already Loaded' });\n      }\n      const head = this.document.getElementsByTagName('head')[0];\n      const isScript = this.loadTemp[name].src.endsWith('.js');\n      const scriptOrStyle = (isScript ? this.loadScript(name) : this.loadStyle(name)) as any;\n\n      scriptOrStyle.onload = () => {\n        this.loadTemp[name].loaded = true;\n        resolve({ script: name, loaded: true, status: 'Loaded' });\n      };\n\n      scriptOrStyle.onerror = (error: any) => resolve({ script: name, loaded: false, status: 'Loaded' });\n      head.appendChild(scriptOrStyle);\n    });\n  }\n\n  private loadScript(name: string) {\n    const script = document.createElement('script');\n    script.id = name;\n    script.type = 'text/javascript';\n    script.crossOrigin = 'anonymous';\n    script.integrity = this.loadTemp[name].integrity;\n    script.src = this.loadTemp[name].src;\n    return script;\n  }\n\n  private loadStyle(name: string) {\n    const style = document.createElement('link');\n    style.id = name;\n    style.rel = 'stylesheet';\n    style.crossOrigin = 'anonymous';\n    style.integrity = this.loadTemp[name].integrity;\n    style.href = this.loadTemp[name].src;\n    return style;\n  }\n\n}\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-d46ab62ea3129c8e3e121cc1ac0b4064",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "returnType": "literal type",
                    "line": 12
                }
            ],
            "kind": 159,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-38c1524ef23704012d3e7f8d0f6a576f",
            "file": "src/app/reducers/index.ts",
            "type": "interface",
            "sourceCode": "import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\n\nexport interface State {\n  router: RouterReducerState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  router: routerReducer,\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n",
            "properties": [
                {
                    "name": "router",
                    "type": "RouterReducerState",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "StorageItem",
            "id": "interface-StorageItem-ccb06e60bcc2af504fdecccde1a7156e",
            "file": "projects/theme-builder/src/app/shared/models/storage.model.ts",
            "type": "interface",
            "sourceCode": "import { CustomProperties } from './custom-properties.model';\n\ninterface StorageItem {\n  name: string;\n  value: any;\n  editable: boolean;\n}\n\nexport class Storage {\n  key: string;\n  default: StorageItem;\n  // current setting\n  current: StorageItem;\n  // save to page\n  storeList: StorageItem[];\n\n  constructor({ key, ...rest }) {\n    this.key = `storage-${key}`;\n    this.default = {\n      name: 'default',\n      value: this.clone(rest),\n      editable: false,\n    };\n    this.current = {\n      name: 'current',\n      value: rest,\n      editable: false,\n    };\n    this.load();\n  }\n\n  private clone(data: any) {\n    return JSON.parse(JSON.stringify(data));\n  }\n\n  save() {\n    const currentIdx = this.storeList.findIndex(x => x.name === 'current');\n    this.storeList[currentIdx] = this.current;\n    const storeListStr = JSON.stringify(this.storeList);\n    localStorage.setItem(this.key, storeListStr);\n  }\n\n  private load() {\n    const storeListStr = localStorage.getItem(this.key);\n    if (storeListStr) {\n      this.storeList = (JSON.parse(storeListStr) as StorageItem[]);\n    } else {\n      this.storeList = [this.default, this.current];\n    }\n    this.restoreTheme('current');\n  }\n\n  themeList() {\n    return this.storeList.filter(x => x.name !== 'current');\n  }\n\n  saveTheme(name: string) {\n    const isExist = this.storeList.some(x => x.name === name);\n    if (isExist || !name) {\n      return;\n    }\n    this.storeList.push({\n      name,\n      value: this.clone(this.current.value),\n      editable: true,\n    });\n    this.save();\n  }\n\n  deleteTheme(name: string) {\n    this.storeList = this.storeList.filter(x => x.name !== name);\n    this.save();\n  }\n\n  restoreTheme(name: string) {\n    const storageItem = this.storeList.find(x => x.name === name).value;\n    for (const key of Object.keys(this.current.value)) {\n      if (storageItem[key]) {\n        (this.current.value[key] as CustomProperties).loadData(this.clone(storageItem[key]));\n      }\n    }\n    this.save();\n  }\n\n  importAll(storageItemStr: string) {\n    try {\n      const storeList = (JSON.parse(storageItemStr) as StorageItem[]);\n      storeList.forEach(x => {\n        const isExistIdx = this.storeList.findIndex(y => y.name === x.name);\n        if (isExistIdx >= 0) {\n          // overwrite\n          this.storeList[isExistIdx] = x;\n        } else {\n          this.storeList.push(x);\n        }\n      });\n    } catch (e) { }\n    this.save();\n  }\n\n  exportAll() {\n    const passList = ['default', 'current'];\n    return JSON.stringify(this.storeList.filter(x => !passList.includes(x.name)));\n  }\n\n}\n\n",
            "properties": [
                {
                    "name": "editable",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "DynamicLoaderService",
            "id": "injectable-DynamicLoaderService-d46ab62ea3129c8e3e121cc1ac0b4064",
            "file": "projects/theme-builder/src/app/services/dynamic-loader.service.ts",
            "properties": [
                {
                    "name": "loadTemp",
                    "defaultValue": "{}",
                    "type": "LoadTemp",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "isLoad$",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "loadAll",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadScript",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 84,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadStyle",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 94,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { from, throwError, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\ninterface ExternalLink {\n  name: string;\n  src: string;\n  integrity: string;\n}\n\ninterface LoadTemp {\n  [key: string]: {\n    loaded: boolean,\n    src: string,\n    integrity: string,\n  };\n}\n\n// name as id\nexport const loaderStore: ExternalLink[] = [\n  // { name: 'css', src: 'https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css', integrity: 'sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I' },\n  { name: 'jquery', src: 'https://code.jquery.com/jquery-3.5.1.slim.min.js', integrity: 'sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' },\n  { name: 'popper', src: 'https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js', integrity: 'sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN' },\n  { name: 'bootstrap', src: 'https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js', integrity: 'sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV' },\n\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicLoaderService {\n  private loadTemp: LoadTemp = {};\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    loaderStore.forEach((x: ExternalLink) => {\n      this.loadTemp[x.name] = {\n        loaded: false,\n        src: x.src,\n        integrity: x.integrity\n      };\n    });\n  }\n\n  isLoad$() {\n    const promises: any[] = [];\n    loaderStore.forEach((x) => promises.push(this.loadAll(x.name)));\n    return from(Promise.all(promises)).pipe(\n      map(_ => {\n        return of(true);\n      }),\n      catchError((err: any) => {\n        console.error(err);\n        return throwError(false);\n      })\n    );\n  }\n\n  removeAll() {\n    loaderStore.forEach((x) => this.document.getElementById(x.name).remove());\n  }\n\n  private loadAll(name: string) {\n    return new Promise((resolve, reject) => {\n      if (this.loadTemp[name].loaded) {\n        resolve({ script: name, loaded: true, status: 'Already Loaded' });\n      }\n      const head = this.document.getElementsByTagName('head')[0];\n      const isScript = this.loadTemp[name].src.endsWith('.js');\n      const scriptOrStyle = (isScript ? this.loadScript(name) : this.loadStyle(name)) as any;\n\n      scriptOrStyle.onload = () => {\n        this.loadTemp[name].loaded = true;\n        resolve({ script: name, loaded: true, status: 'Loaded' });\n      };\n\n      scriptOrStyle.onerror = (error: any) => resolve({ script: name, loaded: false, status: 'Loaded' });\n      head.appendChild(scriptOrStyle);\n    });\n  }\n\n  private loadScript(name: string) {\n    const script = document.createElement('script');\n    script.id = name;\n    script.type = 'text/javascript';\n    script.crossOrigin = 'anonymous';\n    script.integrity = this.loadTemp[name].integrity;\n    script.src = this.loadTemp[name].src;\n    return script;\n  }\n\n  private loadStyle(name: string) {\n    const style = document.createElement('link');\n    style.id = name;\n    style.rel = 'stylesheet';\n    style.crossOrigin = 'anonymous';\n    style.integrity = this.loadTemp[name].integrity;\n    style.href = this.loadTemp[name].src;\n    return style;\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document"
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "EventService",
            "id": "injectable-EventService-c650735642cdd4c313d271820670b2d1",
            "file": "projects/theme-builder/src/app/services/event.service.ts",
            "properties": [
                {
                    "name": "eventList",
                    "defaultValue": "{}",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "event",
                    "args": [
                        {
                            "name": "event",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "publish",
                    "args": [
                        {
                            "name": "event",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  eventList: { [key: string]: Subject<any> } = {};\n\n  constructor() { }\n\n  publish(event: string, value: any) {\n    const eventSubject = this.getEvent(event);\n    eventSubject.next(value);\n  }\n\n  event(event: string) {\n    return this.getEvent(event);\n  }\n\n  private getEvent(event: string) {\n    if (!this.eventList[event]) {\n      this.eventList[event] = new Subject();\n    }\n    return this.eventList[event];\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "PwaService",
            "id": "injectable-PwaService-9a0d2f4fc09a9278eaca271d1c9d3f2f",
            "file": "src/app/services/pwa.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "checkForUpdates",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "description": "",
            "sourceCode": "import { ApplicationRef, Injectable } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PwaService {\n\n  constructor(\n    private appRef: ApplicationRef,\n    private updates: SwUpdate,\n  ) { }\n\n  checkForUpdates() {\n    console.log('checkUpdate');\n    this.updates.available.subscribe(event => {\n      console.log('current version is', event.current);\n      console.log('available version is', event.available);\n      this.updates.activateUpdate().then(() => document.location.reload());\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "appRef",
                        "type": "ApplicationRef"
                    },
                    {
                        "name": "updates",
                        "type": "SwUpdate"
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "updates",
                        "type": "SwUpdate",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "CustomProperties",
            "id": "class-CustomProperties-47e4678f16858a7c7f5c919b5fbe8ad0",
            "file": "projects/theme-builder/src/app/shared/models/custom-properties.model.ts",
            "type": "class",
            "sourceCode": "interface Input {\n  title?: string;\n  // example code\n  code?: string;\n  // file path\n  path?: string;\n}\n\nexport class CustomProperties {\n  title: string;\n  code: string;\n  // general code to copy\n  codeFunction: () => string;\n  path: string;\n  propertiesKeyList: string[] = [];\n  propertiesObj: object = {};\n\n  // load data from Storage model\n  loadData(...value) {\n    Object.assign(this, ...value);\n  }\n\n  generateCode() {\n    delete this.code;\n    this.code = this.codeFunction();\n  }\n\n  updateProperty(property: object) {\n    Object.assign(this.propertiesObj, property);\n  }\n\n  stringToProperties(source: string, splits: string[] = [',', ':']) {\n    const replaceList = ['!default', '\\\\s', '\\\\\"', '\\''].join('|');\n    const rowData = source.replace(new RegExp(replaceList, 'g'), '');\n    const dataList = rowData.split(splits[0]).filter(x => !!x);\n    this.propertiesKeyList = [];\n    this.propertiesObj = {};\n    dataList.forEach((x) => {\n      const [key, value] = x.split(splits[1]);\n      this.propertiesKeyList.push(key);\n      this.propertiesObj[key] = value;\n      return [key, value];\n    });\n  }\n\n  constructor(data: Input = {}) {\n    this.title = data.title || '';\n    this.code = data.code || '';\n    this.path = data.path || '';\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "data",
                        "type": "Input",
                        "defaultValue": "{}"
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "Input",
                        "defaultValue": "{}",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "code",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "codeFunction",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "path",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "propertiesKeyList",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "propertiesObj",
                    "defaultValue": "{}",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "generateCode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "loadData",
                    "args": [
                        {
                            "name": "value",
                            "type": "any[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "stringToProperties",
                    "args": [
                        {
                            "name": "source",
                            "type": "string"
                        },
                        {
                            "name": "splits",
                            "type": "string[]",
                            "defaultValue": "[',', ':']"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "jsdoctags": [
                        {
                            "name": "source",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "splits",
                            "type": "string[]",
                            "defaultValue": "[',', ':']",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateProperty",
                    "args": [
                        {
                            "name": "property",
                            "type": "object"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "jsdoctags": [
                        {
                            "name": "property",
                            "type": "object",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Storage",
            "id": "class-Storage-ccb06e60bcc2af504fdecccde1a7156e",
            "file": "projects/theme-builder/src/app/shared/models/storage.model.ts",
            "type": "class",
            "sourceCode": "import { CustomProperties } from './custom-properties.model';\n\ninterface StorageItem {\n  name: string;\n  value: any;\n  editable: boolean;\n}\n\nexport class Storage {\n  key: string;\n  default: StorageItem;\n  // current setting\n  current: StorageItem;\n  // save to page\n  storeList: StorageItem[];\n\n  constructor({ key, ...rest }) {\n    this.key = `storage-${key}`;\n    this.default = {\n      name: 'default',\n      value: this.clone(rest),\n      editable: false,\n    };\n    this.current = {\n      name: 'current',\n      value: rest,\n      editable: false,\n    };\n    this.load();\n  }\n\n  private clone(data: any) {\n    return JSON.parse(JSON.stringify(data));\n  }\n\n  save() {\n    const currentIdx = this.storeList.findIndex(x => x.name === 'current');\n    this.storeList[currentIdx] = this.current;\n    const storeListStr = JSON.stringify(this.storeList);\n    localStorage.setItem(this.key, storeListStr);\n  }\n\n  private load() {\n    const storeListStr = localStorage.getItem(this.key);\n    if (storeListStr) {\n      this.storeList = (JSON.parse(storeListStr) as StorageItem[]);\n    } else {\n      this.storeList = [this.default, this.current];\n    }\n    this.restoreTheme('current');\n  }\n\n  themeList() {\n    return this.storeList.filter(x => x.name !== 'current');\n  }\n\n  saveTheme(name: string) {\n    const isExist = this.storeList.some(x => x.name === name);\n    if (isExist || !name) {\n      return;\n    }\n    this.storeList.push({\n      name,\n      value: this.clone(this.current.value),\n      editable: true,\n    });\n    this.save();\n  }\n\n  deleteTheme(name: string) {\n    this.storeList = this.storeList.filter(x => x.name !== name);\n    this.save();\n  }\n\n  restoreTheme(name: string) {\n    const storageItem = this.storeList.find(x => x.name === name).value;\n    for (const key of Object.keys(this.current.value)) {\n      if (storageItem[key]) {\n        (this.current.value[key] as CustomProperties).loadData(this.clone(storageItem[key]));\n      }\n    }\n    this.save();\n  }\n\n  importAll(storageItemStr: string) {\n    try {\n      const storeList = (JSON.parse(storageItemStr) as StorageItem[]);\n      storeList.forEach(x => {\n        const isExistIdx = this.storeList.findIndex(y => y.name === x.name);\n        if (isExistIdx >= 0) {\n          // overwrite\n          this.storeList[isExistIdx] = x;\n        } else {\n          this.storeList.push(x);\n        }\n      });\n    } catch (e) { }\n    this.save();\n  }\n\n  exportAll() {\n    const passList = ['default', 'current'];\n    return JSON.stringify(this.storeList.filter(x => !passList.includes(x.name)));\n  }\n\n}\n\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "type": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "current",
                    "type": "StorageItem",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "default",
                    "type": "StorageItem",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "key",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "storeList",
                    "type": "StorageItem[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "clone",
                    "args": [
                        {
                            "name": "data",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteTheme",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "exportAll",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101
                },
                {
                    "name": "importAll",
                    "args": [
                        {
                            "name": "storageItemStr",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "jsdoctags": [
                        {
                            "name": "storageItemStr",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "load",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "restoreTheme",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "saveTheme",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "themeList",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Utils",
            "id": "class-Utils-5586ffe734b23e1f42365b0660383e60",
            "file": "projects/theme-builder/src/app/bootstrap/utils.ts",
            "type": "class",
            "sourceCode": "export class Utils {\n\n  toolFunction() {\n    function stringToProperties(s) {\n      const replaceList = ['!default', '\\\\s', '\\\\\"'].join('|');\n      const rowData = s.replace(new RegExp(replaceList, 'g'), '');\n      const dataList = rowData.split(',').filter(x => !!x);\n      const result = dataList.map((x) => x.split(':'));\n      return new Map(result);\n    }\n\n    // color should be unique\n    function stringToCodeFunction(s, properties) {\n      Object.keys(properties).forEach((key) => {\n        s = s.replace(properties[key], \"${cp.propertiesObj['\" + key + \"']}\");\n      });\n      return s;\n    }\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "toolFunction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-997f5a33d9d925ec6d86ff5a294ba78e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isCollapsed",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "menuList",
                    "defaultValue": "[\n    {\n      title: 'Theme builder',\n      link: '/theme-builder/',\n      children: routes[0].children.map(x => {\n        return {\n          title: x.path,\n          link: x.path,\n        };\n      }),\n    }\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { routes } from 'projects/theme-builder/src/app/app-routing.module';\n\nimport { PwaService } from './services/pwa.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  isCollapsed = false;\n  menuList = [\n    {\n      title: 'Theme builder',\n      link: '/theme-builder/',\n      children: routes[0].children.map(x => {\n        return {\n          title: x.path,\n          link: x.path,\n        };\n      }),\n    }\n  ];\n\n  constructor(private pwaService: PwaService) {\n    this.pwaService.checkForUpdates();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.app-layout {\n  height: 100vh;\n}\n\n.menu-sidebar {\n  position: relative;\n  z-index: 10;\n  min-height: 100vh;\n  box-shadow: 2px 0 6px rgba(0,21,41,.35);\n}\n\n.header-trigger {\n  height: 64px;\n  padding: 20px 24px;\n  font-size: 20px;\n  cursor: pointer;\n  transition: all .3s,padding 0s;\n}\n\n.trigger:hover {\n  color: #1890ff;\n}\n\n.sidebar-logo {\n  position: relative;\n  height: 64px;\n  padding-left: 24px;\n  overflow: hidden;\n  line-height: 64px;\n  background: #001529;\n  transition: all .3s;\n}\n\n.sidebar-logo img {\n  display: inline-block;\n  height: 32px;\n  width: 32px;\n  vertical-align: middle;\n}\n\n.sidebar-logo h1 {\n  display: inline-block;\n  margin: 0 0 0 20px;\n  color: #fff;\n  font-weight: 600;\n  font-size: 14px;\n  font-family: Avenir,Helvetica Neue,Arial,Helvetica,sans-serif;\n  vertical-align: middle;\n}\n\nnz-header {\n  padding: 0;\n  width: 100%;\n  z-index: 2;\n}\n\n.app-header {\n  position: relative;\n  height: 64px;\n  padding: 0;\n  background: #fff;\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\n}\n\nnz-content {\n  margin: 24px;\n}\n\n.inner-content {\n  background: #fff;\n  min-height: 100%;\n}\n\n.child-title {\n  text-transform: uppercase;\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "pwaService",
                        "type": "PwaService"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "pwaService",
                        "type": "PwaService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<nz-layout class=\"app-layout\">\n  <nz-sider\n    class=\"menu-sidebar\"\n    nzCollapsible\n    nzWidth=\"256px\"\n    nzBreakpoint=\"md\"\n    [(nzCollapsed)]=\"isCollapsed\"\n    [nzTrigger]=\"null\"\n  >\n    <div class=\"sidebar-logo\">\n      <a routerLink=\"/\">\n        <img src=\"https://ng.ant.design/assets/img/logo.svg\" alt=\"logo\" />\n        <h1>RCT Internal Website</h1>\n      </a>\n    </div>\n    <ul\n      nz-menu\n      nzTheme=\"dark\"\n      nzMode=\"inline\"\n      [nzInlineCollapsed]=\"isCollapsed\"\n    >\n      <li\n        *ngFor=\"let menu of menuList\"\n        nz-submenu\n        nzOpen\n        [nzTitle]=\"menu.title\"\n        nzIcon=\"dashboard\"\n      >\n        <ul>\n          <li *ngFor=\"let child of menu.children\" nz-menu-item nzMatchRouter>\n            <a class=\"child-title\" [routerLink]=\"menu.link + child.link\">{{ child.title }}</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nz-sider>\n  <nz-layout>\n    <nz-header>\n      <div class=\"app-header\">\n        <span class=\"header-trigger\" (click)=\"isCollapsed = !isCollapsed\">\n          <i\n            class=\"trigger\"\n            nz-icon\n            [nzType]=\"isCollapsed ? 'menu-unfold' : 'menu-fold'\"\n          ></i>\n        </span>\n      </div>\n    </nz-header>\n    <nz-content>\n      <div class=\"inner-content\">\n        <router-outlet></router-outlet>\n      </div>\n    </nz-content>\n  </nz-layout>\n</nz-layout>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-90e21ea69d7d1bccd6e7843d607f1820-1",
            "file": "projects/theme-builder/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<router-outlet></router-outlet>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'theme-builder'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent {\n  title = 'theme-builder';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AppComponent-1"
        },
        {
            "name": "AppShellComponent",
            "id": "component-AppShellComponent-486d426a2f48527a17fa717b7c488b49",
            "file": "src/app/app-shell/app-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-app-shell",
            "styleUrls": [
                "./app-shell.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app-shell.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-app-shell',\n  templateUrl: './app-shell.component.html',\n  styleUrls: ['./app-shell.component.scss']\n})\nexport class AppShellComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app-shell.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nz-spin nzSimple></nz-spin>\n"
        },
        {
            "name": "BootstrapComponent",
            "id": "component-BootstrapComponent-677955bc43ca47b4fa5bd5f004b5e31a",
            "file": "projects/theme-builder/src/app/bootstrap/bootstrap.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./bootstrap.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bootstrap.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "install",
                    "defaultValue": "install()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "theme",
                    "defaultValue": "{\n    dark: dark(),\n    light: light()\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "toggleTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\n\nimport { ViewEncapsulation } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\n\nimport install from './configs/install';\nimport dark from './configs/dark';\nimport light from './configs/light';\n\n\ndeclare var $: any;\n@Component({\n  templateUrl: './bootstrap.component.html',\n  styleUrls: ['./bootstrap.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BootstrapComponent implements OnInit, AfterViewInit, OnDestroy {\n  install = install();\n  theme = {\n    dark: dark(),\n    light: light()\n  };\n  // invalid-feedback, tooltip\n  constructor(\n    private renderer: Renderer2\n  ) {\n    this.toggleTheme('dark-theme');\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  ngOnDestroy() {\n  }\n\n  toggleTheme(theme: string) {\n    const removeClass = theme === 'dark-theme' ? 'light-theme' : 'dark-theme';\n    this.renderer.addClass(document.body, theme);\n    this.renderer.removeClass(document.body, removeClass);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".bootstrap-app {\n  padding: 24px;\n}\n\n.progress {\n  margin-top: 1rem;\n}\n// fixed form feedback not show\n.is-invalid~.invalid-feedback, .is-invalid~.invalid-tooltip, .was-validated :invalid~.invalid-feedback, .was-validated :invalid~.invalid-tooltip {\n  display: block;\n}\n// Bootstrap 4 version 4.5.2\n// ### Sass options\n// https://getbootstrap.com/docs/4.5/getting-started/theming/#sass-options\n// https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss\n\n// override bootstrap functions to comply with --vars\n// @import \"./scss/functions-override\";\n\n.dark-theme {\n  .bootstrap-app {\n    background-color: #1a1a1a;\n  }\n  // mixins first\n  @import \"./scss/mixins\";\n\n  @import \"./theme/dark\";\n\n  // Import Bootstrap source files\n  @import \"./theme/base-bootstrap\";\n}\n\n.light-theme {\n  .bootstrap-app {\n    background-color: white;\n  }\n  // mixins first\n  @import \"./scss/mixins\";\n\n  @import \"./theme/light\";\n\n  // Import Bootstrap source files\n  @import \"./theme/base-bootstrap\";\n}\n",
                    "styleUrl": "./bootstrap.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<app-highlight btnText=\"install step\" [code]=\"install\"></app-highlight>\n\n<nz-tabset>\n  <nz-tab nzTitle=\"Dark theme\" (nzClick)=\"toggleTheme('dark-theme')\">\n    <app-highlight btnText=\"theme scss\" [code]=\"theme.dark\"></app-highlight>\n  </nz-tab>\n  <nz-tab nzTitle=\"Light theme\" (nzClick)=\"toggleTheme('light-theme')\">\n    <app-highlight btnText=\"theme scss\" [code]=\"theme.light\"></app-highlight>\n  </nz-tab>\n</nz-tabset>\n\n<div class=\"bootstrap-app\">\n  <div class=\"row\">\n    <div class=\"col-12 mt-2\">\n      <h1>Typography</h1>\n      <h1>h1. Bootstrap heading</h1>\n      <h2>h2. Bootstrap heading</h2>\n      <h3>h3. Bootstrap heading</h3>\n      <h4>h4. Bootstrap heading</h4>\n      <h5>h5. Bootstrap heading</h5>\n      <h6>h6. Bootstrap heading</h6>\n    </div>\n    <div class=\"col-12 mt-2\">\n      <h1>Images</h1>\n      <img src=\"https://picsum.photos/200/200\" class=\"img-thumbnail\" />\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>Tables</h1>\n    </div>\n    <div class=\"col-6\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">First</th>\n            <th scope=\"col\">Last</th>\n            <th scope=\"col\">Handle</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"col-6\">\n      <table class=\"table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">First</th>\n            <th scope=\"col\">Last</th>\n            <th scope=\"col\">Handle</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12 mt-2\">\n      <h1>Badges</h1>\n      <span class=\"badge badge-primary\">Primary</span>\n      <span class=\"badge badge-secondary\">Secondary</span>\n      <span class=\"badge badge-success\">Success</span>\n      <span class=\"badge badge-danger\">Danger</span>\n      <span class=\"badge badge-warning\">Warning</span>\n      <span class=\"badge badge-info\">Info</span>\n      <span class=\"badge badge-light\">Light</span>\n      <span class=\"badge badge-dark\">Dark</span>\n    </div>\n    <div class=\"col-12 mt-2\">\n      <h1>Breadcrumbs</h1>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Home</li>\n        </ol>\n      </nav>\n\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Home</a></li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Library</li>\n        </ol>\n      </nav>\n\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Home</a></li>\n          <li class=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Library</a></li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">Data</li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>Buttons</h1>\n    </div>\n    <div class=\"col-12 mt-2\">\n      <button type=\"button\" class=\"btn btn-primary\">Primary</button>\n      <button type=\"button\" class=\"btn btn-secondary\">Secondary</button>\n      <button type=\"button\" class=\"btn btn-success\">Success</button>\n      <button type=\"button\" class=\"btn btn-danger\">Danger</button>\n      <button type=\"button\" class=\"btn btn-warning\">Warning</button>\n      <button type=\"button\" class=\"btn btn-info\">Info</button>\n      <button type=\"button\" class=\"btn btn-light\">Light</button>\n      <button type=\"button\" class=\"btn btn-dark\">Dark</button>\n      <button type=\"button\" class=\"btn btn-link\">Link</button>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>Dropdowns</h1>\n    </div>\n    <div class=\"col-12 mt-2\">\n      <div class=\"btn-group\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary dropdown-toggle\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          Action\n        </button>\n        <div class=\"dropdown-menu\">\n          <a class=\"dropdown-item\" href=\"javascript:void(0)\">Action</a>\n          <a class=\"dropdown-item\" href=\"javascript:void(0)\">Another action</a>\n          <a class=\"dropdown-item\" href=\"javascript:void(0)\">Something else here</a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"javascript:void(0)\">Separated link</a>\n        </div>\n      </div>\n      <div class=\"btn-group\">\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary dropdown-toggle\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          Action\n        </button>\n        <div class=\"dropdown-menu\">\n          <a class=\"dropdown-item\" href=\"javascript:void(0)\">Action</a>\n          <a class=\"dropdown-item\" href=\"javascript:void(0)\">Another action</a>\n          <a class=\"dropdown-item\" href=\"javascript:void(0)\">Something else here</a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"javascript:void(0)\">Separated link</a>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>Forms</h1>\n    </div>\n    <div class=\"col-12 mt-2\">\n      <form class=\"was-validated\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Email address</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n          />\n          <small id=\"emailHelp\" class=\"form-text text-muted\"\n            >We'll never share your email with anyone else.</small\n          >\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"exampleInputPassword1\"\n          />\n        </div>\n        <div class=\"form-group form-check\">\n          <div class=\"custom-control custom-checkbox\">\n            <input\n              type=\"checkbox\"\n              class=\"custom-control-input\"\n              id=\"customCheck1\"\n            />\n            <label class=\"custom-control-label\" for=\"customCheck1\"\n              >Check this custom checkbox</label\n            >\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"custom-control custom-radio\">\n            <input\n              type=\"radio\"\n              id=\"customRadio1\"\n              name=\"customRadio\"\n              class=\"custom-control-input\"\n            />\n            <label class=\"custom-control-label\" for=\"customRadio1\"\n              >Toggle this custom radio</label\n            >\n          </div>\n          <div class=\"custom-control custom-radio\">\n            <input\n              type=\"radio\"\n              id=\"customRadio2\"\n              name=\"customRadio\"\n              class=\"custom-control-input\"\n            />\n            <label class=\"custom-control-label\" for=\"customRadio2\"\n              >Or toggle this other custom radio</label\n            >\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <select class=\"custom-select\">\n            <option selected>Open this select menu</option>\n            <option value=\"1\">One</option>\n            <option value=\"2\">Two</option>\n            <option value=\"3\">Three</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label>Readonly</label>\n          <input\n            class=\"form-control\"\n            type=\"text\"\n            placeholder=\"Readonly input here...\"\n            readonly\n          />\n        </div>\n        <div class=\"form-group\">\n          <label>Disabled</label>\n          <input\n            class=\"form-control\"\n            type=\"text\"\n            placeholder=\"Disabled input here...\"\n            disabled\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"validationServer03\">City</label>\n          <input\n            type=\"text\"\n            class=\"form-control is-invalid\"\n            id=\"validationServer03\"\n            aria-describedby=\"validationServer03Feedback\"\n            required\n          />\n          <div id=\"validationServer03Feedback\" class=\"invalid-feedback\">\n            Please provide a valid city.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"validationServer05\">Zip</label>\n          <input\n            type=\"text\"\n            class=\"form-control is-invalid\"\n            id=\"validationServer05\"\n            aria-describedby=\"validationServer05Feedback\"\n            required\n          />\n          <div id=\"validationServer05Feedback\" class=\"invalid-feedback\">\n            Please provide a valid zip.\n          </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>Input Group</h1>\n    </div>\n    <div class=\"col-12 mt-2\">\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n        </div>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Username\"\n          aria-label=\"Username\"\n          aria-describedby=\"basic-addon1\"\n        />\n      </div>\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <div class=\"input-group-text\">\n            <input\n              type=\"checkbox\"\n              aria-label=\"Checkbox for following text input\"\n            />\n          </div>\n        </div>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          aria-label=\"Text input with checkbox\"\n        />\n      </div>\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            id=\"button-addon1\"\n          >\n            Button\n          </button>\n        </div>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"\"\n          aria-label=\"Example text with button addon\"\n          aria-describedby=\"button-addon1\"\n        />\n      </div>\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <button\n            class=\"btn btn-outline-secondary dropdown-toggle\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            Dropdown\n          </button>\n          <div class=\"dropdown-menu\">\n            <a class=\"dropdown-item\" href=\"javascript:void(0)\">Action</a>\n            <a class=\"dropdown-item\" href=\"javascript:void(0)\">Another action</a>\n            <a class=\"dropdown-item\" href=\"javascript:void(0)\">Something else here</a>\n            <div role=\"separator\" class=\"dropdown-divider\"></div>\n            <a class=\"dropdown-item\" href=\"javascript:void(0)\">Separated link</a>\n          </div>\n        </div>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          aria-label=\"Text input with dropdown button\"\n        />\n      </div>\n      <div class=\"input-group mb-3\">\n        <div class=\"custom-file\">\n          <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile02\" />\n          <label\n            class=\"custom-file-label\"\n            for=\"inputGroupFile02\"\n            aria-describedby=\"inputGroupFileAddon02\"\n            >Choose file</label\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>Navs</h1>\n    </div>\n    <div class=\"col-12 mt-2\">\n      <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" href=\"javascript:void(0)\">Active</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"javascript:void(0)\">Link</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"javascript:void(0)\">Link</a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link disabled\"\n            href=\"javascript:void(0)\"\n            tabindex=\"-1\"\n            aria-disabled=\"true\"\n            >Disabled</a\n          >\n        </li>\n      </ul>\n    </div>\n    <div class=\"col-12\">\n      <h1>Pagination</h1>\n    </div>\n    <div class=\"col-12 mt-2\">\n      <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination\">\n          <li class=\"page-item active\">\n            <a class=\"page-link\" href=\"javascript:void(0)\">Previous</a>\n          </li>\n          <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\">1</a></li>\n          <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\">2</a></li>\n          <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\">3</a></li>\n          <li class=\"page-item disabled\">\n            <a class=\"page-link\" href=\"javascript:void(0)\">Next</a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>Progress</h1>\n    </div>\n    <div class=\"col-12 mt-2\">\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar w-75\"\n          role=\"progressbar\"\n          aria-valuenow=\"75\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar\"\n          role=\"progressbar\"\n          style=\"width: 25%\"\n          aria-valuenow=\"25\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        >\n          25%\n        </div>\n      </div>\n      <div class=\"progress\" style=\"height: 1px\">\n        <div\n          class=\"progress-bar\"\n          role=\"progressbar\"\n          style=\"width: 25%\"\n          aria-valuenow=\"25\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\" style=\"height: 20px\">\n        <div\n          class=\"progress-bar\"\n          role=\"progressbar\"\n          style=\"width: 25%\"\n          aria-valuenow=\"25\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar bg-success\"\n          role=\"progressbar\"\n          style=\"width: 25%\"\n          aria-valuenow=\"25\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar bg-info\"\n          role=\"progressbar\"\n          style=\"width: 50%\"\n          aria-valuenow=\"50\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar bg-warning\"\n          role=\"progressbar\"\n          style=\"width: 75%\"\n          aria-valuenow=\"75\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar bg-danger\"\n          role=\"progressbar\"\n          style=\"width: 100%\"\n          aria-valuenow=\"100\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar\"\n          role=\"progressbar\"\n          style=\"width: 15%\"\n          aria-valuenow=\"15\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n        <div\n          class=\"progress-bar bg-success\"\n          role=\"progressbar\"\n          style=\"width: 30%\"\n          aria-valuenow=\"30\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n        <div\n          class=\"progress-bar bg-info\"\n          role=\"progressbar\"\n          style=\"width: 20%\"\n          aria-valuenow=\"20\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar progress-bar-striped\"\n          role=\"progressbar\"\n          style=\"width: 10%\"\n          aria-valuenow=\"10\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar progress-bar-striped bg-success\"\n          role=\"progressbar\"\n          style=\"width: 25%\"\n          aria-valuenow=\"25\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar progress-bar-striped bg-info\"\n          role=\"progressbar\"\n          style=\"width: 50%\"\n          aria-valuenow=\"50\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar progress-bar-striped bg-warning\"\n          role=\"progressbar\"\n          style=\"width: 75%\"\n          aria-valuenow=\"75\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div class=\"progress\">\n        <div\n          class=\"progress-bar progress-bar-striped bg-danger\"\n          role=\"progressbar\"\n          style=\"width: 100%\"\n          aria-valuenow=\"100\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>Tooltips</h1>\n    </div>\n    <div class=\"col-12 m-5 align-items-center d-flex flex-column\">\n      <button\n        type=\"button\"\n        class=\"btn btn-secondary\"\n        data-toggle=\"tooltip\"\n        data-placement=\"top\"\n        title=\"Tooltip on top\"\n      >\n        Tooltip on top\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-secondary\"\n        data-toggle=\"tooltip\"\n        data-placement=\"left\"\n        title=\"Tooltip on left\"\n      >\n        Tooltip on left\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-secondary\"\n        data-toggle=\"tooltip\"\n        data-placement=\"right\"\n        title=\"Tooltip on right\"\n      >\n        Tooltip on right\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-secondary\"\n        data-toggle=\"tooltip\"\n        data-placement=\"bottom\"\n        title=\"Tooltip on bottom\"\n      >\n        Tooltip on bottom\n      </button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CodeBoxComponent",
            "id": "component-CodeBoxComponent-d6cb5d4d819ed3aaa0a3ba4070533ccf",
            "file": "projects/theme-builder/src/app/shared/code-box/code-box.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-code-box",
            "styleUrls": [
                "./code-box.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./code-box.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customProperties",
                    "line": 15
                },
                {
                    "name": "themeFun",
                    "line": 22,
                    "type": "function"
                }
            ],
            "outputsClass": [
                {
                    "name": "customPropertiesChange",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "customPropertiesValue",
                    "type": "CustomProperties",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "htmlRootStyle",
                    "type": "CSSStyleDeclaration",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "propertySubject",
                    "defaultValue": "new Subject()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "visible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "openCode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66
                },
                {
                    "name": "setCustomProperties",
                    "args": [
                        {
                            "name": "theme",
                            "type": "object"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "object",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOne",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { EventService } from './../../services/event.service';\nimport { Component, Input, ElementRef, OnChanges, Output, EventEmitter, OnInit, OnDestroy, ContentChild } from '@angular/core';\nimport { CustomProperties } from '../models/custom-properties.model';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-code-box',\n  templateUrl: './code-box.component.html',\n  styleUrls: ['./code-box.component.scss']\n})\nexport class CodeBoxComponent implements OnInit, OnDestroy, OnChanges {\n  customPropertiesValue: CustomProperties;\n  @Input()\n  get customProperties() {\n    return this.customPropertiesValue;\n  }\n  set customProperties(value) {\n    this.customPropertiesValue = value;\n    this.customPropertiesChange.emit(this.customPropertiesValue);\n  }\n  @Input() themeFun: (x: object) => object;\n  @Output() customPropertiesChange = new EventEmitter();\n  propertySubject = new Subject();\n  subscription = new Subscription();\n\n  readonly htmlRootStyle: CSSStyleDeclaration;\n  visible = false;\n\n  constructor(\n    private elementRef: ElementRef,\n    private eventService: EventService,\n  ) {\n    this.htmlRootStyle = this.elementRef.nativeElement.style;\n  }\n\n  ngOnInit() {\n    const sub = this.propertySubject.pipe(\n      debounceTime(300)\n    ).subscribe((property: object) => {\n      this.setCustomProperties(property);\n      this.customProperties.updateProperty(property);\n      this.eventService.publish('storage-service', 'update');\n    });\n    this.subscription.add(sub);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  ngOnChanges(): void {\n    if (!this.customProperties) {\n      return;\n    }\n    this.setCustomProperties(this.customProperties.propertiesObj);\n  }\n\n  updateOne(key: string, value: string) {\n    const property = {\n      [key]: value\n    };\n    this.propertySubject.next(property);\n  }\n\n  openCode() {\n    this.visible = true;\n    this.customProperties.generateCode();\n  }\n\n  private setCustomProperties(theme: object) {\n    if (this.themeFun) {\n      theme = this.themeFun(theme);\n    }\n    Object.keys(theme).forEach(k =>\n      this.htmlRootStyle.setProperty(`--${k}`, theme[k])\n    );\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".code-box {\n  position: relative;\n  border: 1px black solid;\n  margin: 5px;\n}\n\n.code-actions {\n  padding-left: 5px;\n}\n\n.bg-white {\n  background-color: white;\n  margin: 5px;\n  padding: 0 5px;\n  border-radius: 6px;\n}\n\n.color-section {\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n  padding: 5px;\n  background-color: white;\n  border-radius: 10px;\n\n  .color{\n    width: 45px;\n    height: 45px;\n    margin: 0 5px;\n    border-radius: 50%;\n    border: solid 1px #c6c6c6;\n  }\n\n  .title{\n    font-size: 12px;\n    line-height: 2.08;\n    color: #a9abb7;\n  }\n\n  .color-input {\n    width: 100px;\n    height: 16px;\n    font-size: 12px;\n    color: #333333;\n  }\n}\n\n\n.code-example {\n  padding: 5px;\n}\n",
                    "styleUrl": "./code-box.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef"
                    },
                    {
                        "name": "eventService",
                        "type": "EventService"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "eventService",
                        "type": "EventService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy",
                "OnChanges"
            ],
            "accessors": {
                "customProperties": {
                    "name": "customProperties",
                    "setSignature": {
                        "name": "customProperties",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"code-box\">\n  <h2 class=\"bg-white\">{{ customProperties.title }}</h2>\n\n  <div class=\"code-actions\">\n    <button (click)=\"openCode()\" nz-button nzType=\"default\" nzShape=\"circle\">\n      <i nz-icon nzType=\"code\"></i>\n    </button>\n  </div>\n\n  <ng-container *ngFor=\"let key of customProperties.propertiesKeyList\">\n    <div\n      *ngIf=\"customProperties.propertiesObj[key] as value\"\n      class=\"color-section\"\n    >\n      <div\n        class=\"color\"\n        [style.background]=\"value\"\n      ></div>\n      <div class=\"\">\n        <div class=\"title\">{{ key }}</div>\n        <input\n          class=\"color-input\"\n          [colorPicker]=\"value\"\n          cpPosition=\"bottom\"\n          [value]=\"value\"\n          (colorPickerChange)=\"updateOne(key, $event)\"\n        />\n      </div>\n    </div>\n  </ng-container>\n\n  <div class=\"code-example\">\n    <ng-content></ng-content>\n  </div>\n</div>\n\n<nz-drawer\n  [nzVisible]=\"visible\"\n  nzPlacement=\"top\"\n  [nzHeight]=\"500\"\n  nzTitle=\"Code example\"\n  (nzOnClose)=\"visible = false\"\n>\n  <div>Path: {{ customProperties.path }}</div>\n  <app-highlight\n    *ngIf=\"customProperties.code\"\n    [code]=\"customProperties.code\"\n  ></app-highlight>\n</nz-drawer>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HighlightComponent",
            "id": "component-HighlightComponent-c153566cec8d338ead836d86a3d32818",
            "file": "projects/theme-builder/src/app/shared/highlight/highlight.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-highlight",
            "styleUrls": [
                "./highlight.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./highlight.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "btnText",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "code",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "language",
                    "defaultValue": "'scss'",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "htmlCode",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isShowCode",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, AfterViewInit } from '@angular/core';\n\ndeclare var Prism: any;\n\n@Component({\n  selector: 'app-highlight',\n  templateUrl: './highlight.component.html',\n  styleUrls: ['./highlight.component.scss']\n})\nexport class HighlightComponent implements OnChanges, AfterViewInit {\n  @Input() language = 'scss';\n  @Input() code: string;\n  @Input() btnText: string;\n  isShowCode = false;\n  htmlCode: any;\n\n  get languageClass() {\n    return `language-${this.language}`;\n  }\n\n  get isShow() {\n    if (this.btnText) {\n      return this.isShowCode;\n    } else {\n      return true;\n    }\n  }\n\n  constructor() { }\n\n  ngOnChanges() {\n    if (!this.code) {\n      return;\n    }\n    this.htmlCode = Prism.highlight(this.code, Prism.languages[this.language]);\n  }\n\n  ngAfterViewInit() {\n    Prism.highlightAll();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: block;\n  position: relative;\n  width: 800px;\n  overflow-y: scroll;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n}\n",
                    "styleUrl": "./highlight.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 27
            },
            "implements": [
                "OnChanges",
                "AfterViewInit"
            ],
            "accessors": {
                "languageClass": {
                    "name": "languageClass",
                    "getSignature": {
                        "name": "languageClass",
                        "type": "",
                        "returnType": "",
                        "line": 17
                    }
                },
                "isShow": {
                    "name": "isShow",
                    "getSignature": {
                        "name": "isShow",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                }
            },
            "templateData": "<button nz-button nzType=\"primary\" (click)=\"isShowCode = !isShowCode\">\n  <i nz-icon nzType=\"code\" nzTheme=\"outline\"></i>\n  {{ btnText }}\n</button>\n<pre\n  [hidden]=\"!isShow\"\n><code [ngClass]=\"languageClass\" [innerHTML]=\"htmlCode\"></code></pre>\n"
        },
        {
            "name": "LdPromotionComponent",
            "id": "component-LdPromotionComponent-2118895ea92604e20ab5e837190c5029",
            "file": "projects/theme-builder/src/app/ld-promotion/ld-promotion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ld-promotion",
            "styleUrls": [
                "./ld-promotion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ld-promotion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "app",
                    "defaultValue": "app()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "card",
                    "defaultValue": "card()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "countDown",
                    "defaultValue": "countDown()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "faq",
                    "defaultValue": "faq()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "infoPage",
                    "defaultValue": "infoPage()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "root",
                    "defaultValue": "root()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "section",
                    "defaultValue": "section()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "step",
                    "defaultValue": "step()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "storage",
                    "defaultValue": "new Storage({\n    key: 'lp-promotion',\n    root: this.root,\n    app: this.app,\n    card: this.card,\n    section: this.section,\n    step: this.step,\n    countDown: this.countDown,\n    faq: this.faq,\n    table: this.table,\n    infoPage: this.infoPage,\n  })",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "table",
                    "defaultValue": "table()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Storage } from './../shared/models/storage.model';\nimport { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\n\nimport root from './configs/root';\nimport app from './configs/app';\nimport card from './configs/card';\nimport section from './configs/section';\nimport step from './configs/step';\nimport countDown from './configs/count-down';\nimport faq from './configs/faq';\nimport table from './configs/table';\nimport infoPage from './configs/info-page';\n\n@Component({\n  selector: 'app-ld-promotion',\n  templateUrl: './ld-promotion.component.html',\n  styleUrls: ['./ld-promotion.component.scss']\n})\nexport class LdPromotionComponent implements OnInit {\n  root = root();\n  app = app();\n  card = card();\n  section = section();\n  step = step();\n  countDown = countDown();\n  faq = faq();\n  table = table();\n  infoPage = infoPage();\n  storage = new Storage({\n    key: 'lp-promotion',\n    root: this.root,\n    app: this.app,\n    card: this.card,\n    section: this.section,\n    step: this.step,\n    countDown: this.countDown,\n    faq: this.faq,\n    table: this.table,\n    infoPage: this.infoPage,\n  });\n\n  constructor(\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n@import './css/responsive';\n@import './css/palette';\n\n.app {\n  width: 100%;\n  height: 100%;\n  background: var(--app-background);\n  padding: 24px;\n}\n\n\npre {\n  display: none;\n}\n",
                    "styleUrl": "./ld-promotion.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 40
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-theme-header [storage]=\"storage\"></app-theme-header>\n\n<app-code-box [customProperties]=\"root\">\n  <app-code-box [(customProperties)]=\"app\">\n    <div class=\"app\">\n      <app-code-box id=\"card\" [customProperties]=\"card\">\n        <div class=\"card\">\n          <div class=\"cardTitle\">\n            card title\n          </div>\n          <div class=\"cardBody\">card body</div>\n        </div>\n      </app-code-box>\n\n      <app-code-box id=\"section\" [customProperties]=\"section\">\n        <div class=\"section\">\n          <div class=\"title\">title</div>\n          <p class=\"css.subtitle\">\n            subtitle\n          </p>\n          <div class=\"content\">content</div>\n          <div class=\"footer\">footer</div>\n        </div>\n      </app-code-box>\n\n      <app-code-box id=\"step\" [customProperties]=\"step\">\n        <div>\n          <div class=\"topTitle h1\">h1</div>\n          <div class=\"topTitle h2\">h2</div>\n          <div class=\"topTitle h3\">h3</div>\n          <div class=\"header\">header title</div>\n          <div class=\"stepContainer\">\n            <div class=\"step\">\n              <a class=\"stepLink\">\n                <img\n                  class=\"stepicon\"\n                  src=\"/assets/images/ld-promotion/rule/step/step-1-en.png\"\n                  alt=\"\"\n                />\n                <div class=\"steptitle\">title</div>\n              </a>\n              <div class=\"stepcontent\">\n                content\n              </div>\n            </div>\n          </div>\n        </div>\n      </app-code-box>\n\n      <app-code-box id=\"countDown\" [customProperties]=\"countDown\">\n        <div class=\"count-container\">\n          <div class=\"countDown\">\n            <div class=\"title\">Final</div>\n            <div class=\"remain\">3</div>\n            <div class=\"subtitle\">Days</div>\n            <div class=\"content\">\n              content\n            </div>\n          </div>\n        </div>\n      </app-code-box>\n\n      <app-code-box id=\"faq\" [customProperties]=\"faq\">\n        <section class=\"faq\">\n          <h3 class=\"title\">title</h3>\n        </section>\n      </app-code-box>\n\n      <app-code-box id=\"table\" [customProperties]=\"table\">\n        <div class=\"tableContainer\">\n          <table class=\"table tableHighlight tableAuto autoNewline\">\n            <thead class=\"header\">\n              <tr>\n                <th>Header</th>\n                <th>Header</th>\n              </tr>\n            </thead>\n            <tbody class=\"body\">\n              <tr\n                class=\"tr ${isHighlight(`${rowIndex}`) ? css.highlight : null}\"\n              >\n                <td class=\"td\">\n                  td\n                </td>\n                <td class=\"td highlight\">\n                  td\n                </td>\n              </tr>\n              <tr class=\"tr highlight\">\n                <td class=\"td\">\n                  td\n                </td>\n                <td class=\"td\">\n                  td\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </app-code-box>\n    </div>\n  </app-code-box>\n\n  <app-code-box id=\"infoPage\" [customProperties]=\"infoPage\">\n    <div class=\"bg\">\n      <div class=\"textSection\">\n        <img\n          class=\"textLogo\"\n          src=\"assets/images/ld-promotion/info-page/l-devent-logo.png\"\n          alt=\"text logo\"\n        />\n        <div>info</div>\n      </div>\n    </div>\n  </app-code-box>\n</app-code-box>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-cca1a8911321fa17756ce90c90de65cc",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ThemeHeaderComponent",
            "id": "component-ThemeHeaderComponent-dbb380c0913d65905e47350bf2799611",
            "file": "projects/theme-builder/src/app/shared/theme-header/theme-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-theme-header",
            "styleUrls": [
                "./theme-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./theme-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "storage",
                    "line": 13,
                    "type": "Storage"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clipboard",
                    "type": "ClipboardJS",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "exportText",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "importText",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isExportVisible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isImportVisible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "themeTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "copy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "handleImport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "toggleExport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "toggleImport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Subscription } from 'rxjs';\nimport { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { EventService } from '../../services/event.service';\nimport { Storage } from '../../shared/models/storage.model';\nimport ClipboardJS from 'clipboard';\n\n@Component({\n  selector: 'app-theme-header',\n  templateUrl: './theme-header.component.html',\n  styleUrls: ['./theme-header.component.scss']\n})\nexport class ThemeHeaderComponent implements OnInit, OnDestroy {\n  @Input() storage: Storage;\n  subscription = new Subscription();\n  themeTitle = '';\n  isImportVisible = false;\n  importText = '';\n  isExportVisible = false;\n  exportText = '';\n  clipboard: ClipboardJS;\n\n  constructor(\n    private eventService: EventService,\n  ) { }\n\n  ngOnInit(): void {\n    const sub = this.eventService.event('storage-service').subscribe(_ => {\n      this.storage.save();\n    });\n    this.subscription.add(sub);\n    this.clipboard = new ClipboardJS('.exportTextBtn', {\n      target: '#exportText'\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.clipboard.destroy();\n  }\n\n  toggleImport() {\n    this.isImportVisible = !this.isImportVisible;\n  }\n\n  toggleExport() {\n    this.isExportVisible = !this.isExportVisible;\n    this.exportText = this.storage.exportAll();\n  }\n\n  handleImport() {\n    this.storage.importAll(this.importText);\n    this.toggleImport();\n  }\n\n  copy() {\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./theme-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "eventService",
                        "type": "EventService"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "eventService",
                        "type": "EventService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<nz-input-group nzSearch [nzAddOnAfter]=\"suffixButton\">\n  <input\n    type=\"text\"\n    nz-input\n    placeholder=\"Theme title\"\n    [(ngModel)]=\"themeTitle\"\n  />\n</nz-input-group>\n<ng-template #suffixButton>\n  <button\n    nz-button\n    nzType=\"primary\"\n    nzSearch\n    (click)=\"storage.saveTheme(themeTitle)\"\n  >\n    Save\n  </button>\n  <button nz-button nzType=\"second\" (click)=\"toggleImport()\">\n    Import\n  </button>\n  <button nz-button nzType=\"second\" (click)=\"toggleExport()\">\n    Export\n  </button>\n</ng-template>\n\n<nz-button-group>\n  <ng-container *ngFor=\"let item of storage.themeList()\">\n    <button\n      (click)=\"storage.restoreTheme(item.name)\"\n      nz-button\n      nzType=\"default\"\n    >\n      {{ item.name }}\n    </button>\n    <button\n      *ngIf=\"item.editable\"\n      (click)=\"storage.deleteTheme(item.name)\"\n      nz-button\n      nzDanger\n      nzType=\"primary\"\n      nzShape=\"circle\"\n    >\n      <i nz-icon nzType=\"close\" nzTheme=\"outline\"></i>\n    </button>\n  </ng-container>\n</nz-button-group>\n\n<nz-modal\n  [(nzVisible)]=\"isImportVisible\"\n  nzTitle=\"Import Modal\"\n  (nzOnCancel)=\"toggleImport()\"\n  (nzOnOk)=\"handleImport()\"\n>\n  <textarea\n    nz-input\n    placeholder=\"Import string\"\n    [nzAutosize]=\"{ minRows: 3, maxRows: 5 }\"\n    [ngStyle]=\"{'word-break': 'break-all'}\"\n    [(ngModel)]=\"importText\"\n  ></textarea>\n</nz-modal>\n\n<nz-modal\n  [(nzVisible)]=\"isExportVisible\"\n  nzTitle=\"Export Modal\"\n  (nzOnCancel)=\"toggleExport()\"\n  (nzOnOk)=\"toggleExport()\"\n>\n  <textarea\n    id=\"exportText\"\n    nz-input\n    placeholder=\"Export string\"\n    [ngStyle]=\"{'word-break': 'break-all'}\"\n    [nzAutosize]=\"{ minRows: 3, maxRows: 5 }\"\n    [(ngModel)]=\"exportText\"\n  ></textarea>\n\n  <div *nzModalFooter>\n    <button\n      nz-button\n      nzType=\"primary\"\n      class=\"exportTextBtn\"\n      data-clipboard-target=\"#exportText\"\n    >\n      Copy to clipboard\n    </button>\n  </div>\n</nz-modal>\n"
        },
        {
            "name": "VariableComponent",
            "id": "component-VariableComponent-4266e9414e7dfb4d824a19645e41d226",
            "file": "projects/theme-builder/src/app/bootstrap/variable/variable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-variable",
            "styleUrls": [
                "./variable.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./variable.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "colors()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "themes",
                    "defaultValue": "themes()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "themeFun",
                    "args": [
                        {
                            "name": "theme",
                            "type": "object"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "object",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport colors from '../configs/colors';\nimport themes from '../configs/themes';\n\n@Component({\n  selector: 'app-variable',\n  templateUrl: './variable.component.html',\n  styleUrls: ['./variable.component.scss']\n})\nexport class VariableComponent implements OnInit {\n  colors = colors();\n  themes = themes();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  themeFun(theme: object) {\n    const rgbToHsl = (red, green, blue) => {\n      const r = Number(red.toString().trim()) / 255;\n      const g = Number(green.toString().trim()) / 255;\n      const b = Number(blue.toString().trim()) / 255;\n\n      const max = Math.max(r, g, b);\n      const min = Math.min(r, g, b);\n      let h;\n      let s;\n      let l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n          default:\n            break;\n        }\n        h /= 6;\n      }\n\n      h = Math.round(360 * h);\n      s = Math.round(100 * s);\n      l = Math.round(100 * l);\n\n      return [h, s, l];\n    };\n\n    // from @josh3736 | https://stackoverflow.com/a/3732187\n    const colorToHsl = (color: string): any[] => {\n      if (color.startsWith('#')) {\n        if (color.length === 4) {\n          const r = parseInt(color.substr(1, 1) + color.substr(1, 1), 16);\n          const g = parseInt(color.substr(2, 1) + color.substr(2, 1), 16);\n          const b = parseInt(color.substr(3, 1) + color.substr(3, 1), 16);\n          return rgbToHsl(r, g, b);\n        } else {\n          const r = parseInt(color.substr(1, 2), 16);\n          const g = parseInt(color.substr(3, 2), 16);\n          const b = parseInt(color.substr(5, 2), 16);\n          return rgbToHsl(r, g, b);\n        }\n      } else if (color.startsWith('rgba')) {\n        const [r, g, b] = color.slice(5, -1).split(',');\n        return rgbToHsl(r, g, b).slice(0, 3);\n      } else if (color.startsWith('rgb')) {\n        const [r, g, b] = color.slice(4, -1).split(',');\n        return rgbToHsl(r, g, b);\n      } else if (color.startsWith('hsla')) {\n        return color.slice(5, -1).split(',').slice(0, 3);\n      } else if (color.startsWith('hsl')) {\n        return color.slice(4, -1).split(',');\n      } else {\n        // named color values are not yet supported\n        console.error('Named color values are not supported in the config. Convert it manually using this chart: https://htmlcolorcodes.com/color-names/');\n        return [0, 0, 16]; // defaults to dark gray\n      }\n    };\n\n    const result = Object.keys(theme).reduce((prev, key) => {\n      const hsl = colorToHsl(theme[key]);\n      prev[`${key}`] = `hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`;\n      prev[`${key}-h`] = `${hsl[0]}`;\n      prev[`${key}-s`] = `${hsl[1]}%`;\n      prev[`${key}-l`] = `${hsl[2]}%`;\n      return prev;\n    }, {});\n    return result;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./variable.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<app-code-box id=\"themes\" [customProperties]=\"themes\" [themeFun]=\"themeFun\">\n  <app-code-box id=\"colors\" [customProperties]=\"colors\"></app-code-box>\n\n  <div id=\"bootstrap-theme\">\n    <div>\n      <!-- Nav -->\n      <!-- https://getbootstrap.com/docs/4.5/components/navs/ -->\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <button\n          class=\"navbar-toggler navbar-toggler-right\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarTogglerDemo03\"\n          aria-controls=\"navbarTogglerDemo03\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <a class=\"navbar-brand\">Navbar</a>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n          <ul class=\"navbar-nav mr-auto mt-2 mt-md-0\">\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\"\n                >Home\n                <span class=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\">Link</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link disabled\">Disabled</a>\n            </li>\n          </ul>\n          <form class=\"form-inline my-2 my-lg-0\">\n            <input\n              class=\"form-control mr-sm-2\"\n              type=\"text\"\n              placeholder=\"Search\"\n            />\n          </form>\n        </div>\n      </nav>\n\n      <div class=\"container-fluid\">\n        <div class=\"row m-3\">\n          <div class=\"col-12 my-2\">\n            <!-- Carousel -->\n            <!-- https://getbootstrap.com/docs/4.5/components/carousel/ -->\n            <div\n              id=\"carouselExampleInterval\"\n              class=\"carousel slide\"\n              data-ride=\"carousel\"\n            >\n              <div class=\"carousel-inner\">\n                <div class=\"carousel-item active\" data-interval=\"10000\">\n                  <img\n                    src=\"https://picsum.photos/200/100\"\n                    class=\"d-block w-100\"\n                  />\n                </div>\n                <div class=\"carousel-item\" data-interval=\"2000\">\n                  <img\n                    src=\"https://picsum.photos/200/100\"\n                    class=\"d-block w-100\"\n                  />\n                </div>\n                <div class=\"carousel-item\">\n                  <img\n                    src=\"https://picsum.photos/200/100\"\n                    class=\"d-block w-100\"\n                  />\n                </div>\n              </div>\n              <a\n                class=\"carousel-control-prev\"\n                href=\"#carouselExampleInterval\"\n                role=\"button\"\n                data-slide=\"prev\"\n              >\n                <span\n                  class=\"carousel-control-prev-icon\"\n                  aria-hidden=\"true\"\n                ></span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n              <a\n                class=\"carousel-control-next\"\n                href=\"#carouselExampleInterval\"\n                role=\"button\"\n                data-slide=\"next\"\n              >\n                <span\n                  class=\"carousel-control-next-icon\"\n                  aria-hidden=\"true\"\n                ></span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </div>\n\n            <!-- Jumbotron -->\n            <!-- https://getbootstrap.com/docs/4.5/components/jumbotron/ -->\n            <div class=\"jumbotron mb-2\">\n              <h1 class=\"display-4\">Hello, world!</h1>\n              <p class=\"lead\">\n                This is a simple hero unit, a simple jumbotron-style component\n                for calling extra attention to featured content or information.\n              </p>\n              <hr class=\"my-4\" />\n              <p>\n                It uses utility classes for typography and spacing to space\n                content out within the larger container.\n              </p>\n              <a class=\"btn btn-primary btn-lg\" role=\"button\">Learn more</a>\n            </div>\n\n            <!-- Media object -->\n            <!-- https://getbootstrap.com/docs/4.5/components/media-object/ -->\n            <div class=\"media mb-2\">\n              <img src=\"https://picsum.photos/64/64\" class=\"mr-3\" />\n              <div class=\"media-body\">\n                <h5 class=\"mt-0\">Media heading</h5>\n                Cras sit amet nibh libero, in gravida nulla. Nulla vel metus\n                scelerisque ante sollicitudin. Cras purus odio, vestibulum in\n                vulputate at, tempus viverra turpis. Fusce condimentum nunc ac\n                nisi vulputate fringilla. Donec lacinia congue felis in\n                faucibus.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-6\">\n            <!--Body text-->\n            <p>Hello. I'm a little bit of body text. Plain and simple.</p>\n\n            <!--Badges-->\n            <!-- https://getbootstrap.com/docs/4.5/components/badge/ -->\n            <span class=\"badge badge-primary\">Primary</span>\n            <span class=\"badge badge-secondary\">Secondary</span>\n            <span class=\"badge badge-success\">Success</span>\n            <span class=\"badge badge-danger\">Danger</span>\n            <span class=\"badge badge-warning\">Warning</span>\n            <span class=\"badge badge-info\">Info</span>\n            <span class=\"badge badge-light\">Light</span>\n            <span class=\"badge badge-dark\">Dark</span>\n\n            <!--Breadcrumb-->\n            <!-- https://getbootstrap.com/docs/4.5/components/breadcrumb/ -->\n            <nav aria-label=\"breadcrumb\" role=\"navigation\">\n              <ol class=\"breadcrumb mt-2\">\n                <li class=\"breadcrumb-item\"><a>Home</a></li>\n                <li class=\"breadcrumb-item\"><a>Library</a></li>\n                <li class=\"breadcrumb-item active\" aria-current=\"page\">Data</li>\n              </ol>\n            </nav>\n\n            <!--Buttons-->\n            <!-- https://getbootstrap.com/docs/4.5/components/buttons/ -->\n            <div>\n              <button type=\"button\" class=\"btn btn-primary\">Primary</button>\n              <button type=\"button\" class=\"btn btn-secondary\">Secondary</button>\n              <button type=\"button\" class=\"btn btn-success\">Success</button>\n              <button type=\"button\" class=\"btn btn-danger\">Danger</button>\n            </div>\n            <div class=\"mt-2\">\n              <button type=\"button\" class=\"btn btn-warning\">Warning</button>\n              <button type=\"button\" class=\"btn btn-info\">Info</button>\n              <button type=\"button\" class=\"btn btn-light\">Light</button>\n              <button type=\"button\" class=\"btn btn-dark\">Dark</button>\n            </div>\n\n            <!--Outline Buttons-->\n            <div class=\"mt-2\">\n              <button type=\"button\" class=\"btn btn-outline-primary\">\n                Primary\n              </button>\n              <button type=\"button\" class=\"btn btn-outline-secondary\">\n                Secondary\n              </button>\n              <button type=\"button\" class=\"btn btn-outline-success\">\n                Success\n              </button>\n              <button type=\"button\" class=\"btn btn-outline-danger\">\n                Danger\n              </button>\n            </div>\n            <div class=\"mt-2\">\n              <button type=\"button\" class=\"btn btn-outline-warning\">\n                Warning\n              </button>\n              <button type=\"button\" class=\"btn btn-outline-info\">Info</button>\n              <button type=\"button\" class=\"btn btn-outline-light\">Light</button>\n              <button type=\"button\" class=\"btn btn-outline-dark\">Dark</button>\n            </div>\n\n            <!--Checkbox buttons-->\n            <!-- https://getbootstrap.com/docs/4.5/components/button-group/ -->\n\n            <div class=\"mt-3\">\n              <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <label class=\"btn btn-primary active\">\n                  <input type=\"checkbox\" checked autocomplete=\"off\" /> Yes\n                </label>\n                <label class=\"btn btn-primary\">\n                  <input type=\"checkbox\" autocomplete=\"off\" /> No\n                </label>\n              </div>\n\n              <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <label class=\"btn btn-secondary active\">\n                  <input type=\"checkbox\" checked autocomplete=\"off\" /> Yes\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"checkbox\" autocomplete=\"off\" /> No\n                </label>\n              </div>\n              <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <label class=\"btn btn-success active\">\n                  <input type=\"checkbox\" checked autocomplete=\"off\" /> Yes\n                </label>\n                <label class=\"btn btn-success\">\n                  <input type=\"checkbox\" autocomplete=\"off\" /> No\n                </label>\n              </div>\n              <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <label class=\"btn btn-danger active\">\n                  <input type=\"checkbox\" checked autocomplete=\"off\" /> Yes\n                </label>\n                <label class=\"btn btn-danger\">\n                  <input type=\"checkbox\" autocomplete=\"off\" /> No\n                </label>\n              </div>\n            </div>\n\n            <div class=\"mt-2\">\n              <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <label class=\"btn btn-warning active\">\n                  <input type=\"checkbox\" checked autocomplete=\"off\" /> Yes\n                </label>\n                <label class=\"btn btn-warning\">\n                  <input type=\"checkbox\" autocomplete=\"off\" /> No\n                </label>\n              </div>\n              <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <label class=\"btn btn-info active\">\n                  <input type=\"checkbox\" checked autocomplete=\"off\" /> Yes\n                </label>\n                <label class=\"btn btn-info\">\n                  <input type=\"checkbox\" autocomplete=\"off\" /> No\n                </label>\n              </div>\n              <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <label class=\"btn btn-light active\">\n                  <input type=\"checkbox\" checked autocomplete=\"off\" /> Yes\n                </label>\n                <label class=\"btn btn-light\">\n                  <input type=\"checkbox\" autocomplete=\"off\" /> No\n                </label>\n              </div>\n              <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <label class=\"btn btn-dark active\">\n                  <input type=\"checkbox\" checked autocomplete=\"off\" /> Yes\n                </label>\n                <label class=\"btn btn-dark\">\n                  <input type=\"checkbox\" autocomplete=\"off\" /> No\n                </label>\n              </div>\n            </div>\n\n            <!-- Collapse -->\n            <!-- https://getbootstrap.com/docs/4.5/components/collapse/ -->\n            <div class=\"mt-2\">\n              <p>\n                <a\n                  class=\"btn btn-primary\"\n                  data-toggle=\"collapse\"\n                  href=\"#collapseExample\"\n                  role=\"button\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"collapseExample\"\n                >\n                  Link with href\n                </a>\n                <button\n                  class=\"btn btn-primary\"\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target=\"#collapseExample\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"collapseExample\"\n                >\n                  Button with data-target\n                </button>\n              </p>\n              <div class=\"collapse\" id=\"collapseExample\">\n                <div class=\"card card-body\">\n                  Anim pariatur cliche reprehenderit, enim eiusmod high life\n                  accusamus terry richardson ad squid. Nihil anim keffiyeh\n                  helvetica, craft beer labore wes anderson cred nesciunt\n                  sapiente ea proident.\n                </div>\n              </div>\n            </div>\n\n            <!--Dropdown buttons-->\n            <!-- https://getbootstrap.com/docs/4.5/components/dropdowns/ -->\n            <div class=\"mt-3\">\n              <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn btn-primary\">Primary</button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-primary dropdown-toggle dropdown-toggle-split\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <span class=\"sr-only\">Toggle Dropdown</span>\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\">Action</a>\n                  <a class=\"dropdown-item\">Another action</a>\n                  <a class=\"dropdown-item\">Something else here</a>\n                  <div class=\"dropdown-divider\"></div>\n                  <a class=\"dropdown-item\">Separated link</a>\n                </div>\n              </div>\n              <!-- /btn-group -->\n              <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn btn-secondary\">\n                  Secondary\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <span class=\"sr-only\">Toggle Dropdown</span>\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\">Action</a>\n                  <a class=\"dropdown-item\">Another action</a>\n                  <a class=\"dropdown-item\">Something else here</a>\n                  <div class=\"dropdown-divider\"></div>\n                  <a class=\"dropdown-item\">Separated link</a>\n                </div>\n              </div>\n              <!-- /btn-group -->\n              <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn btn-success\">Success</button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-success dropdown-toggle dropdown-toggle-split\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <span class=\"sr-only\">Toggle Dropdown</span>\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\">Action</a>\n                  <a class=\"dropdown-item\">Another action</a>\n                  <a class=\"dropdown-item\">Something else here</a>\n                  <div class=\"dropdown-divider\"></div>\n                  <a class=\"dropdown-item\">Separated link</a>\n                </div>\n              </div>\n              <!-- /btn-group -->\n            </div>\n            <div class=\"mt-2\">\n              <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn btn-info\">Info</button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-info dropdown-toggle dropdown-toggle-split\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <span class=\"sr-only\">Toggle Dropdown</span>\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\">Action</a>\n                  <a class=\"dropdown-item\">Another action</a>\n                  <a class=\"dropdown-item\">Something else here</a>\n                  <div class=\"dropdown-divider\"></div>\n                  <a class=\"dropdown-item\">Separated link</a>\n                </div>\n              </div>\n              <!-- /btn-group -->\n              <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn btn-warning\">Warning</button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-warning dropdown-toggle dropdown-toggle-split\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <span class=\"sr-only\">Toggle Dropdown</span>\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\">Action</a>\n                  <a class=\"dropdown-item\">Another action</a>\n                  <a class=\"dropdown-item\">Something else here</a>\n                  <div class=\"dropdown-divider\"></div>\n                  <a class=\"dropdown-item\">Separated link</a>\n                </div>\n              </div>\n              <!-- /btn-group -->\n              <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn btn-danger\">Danger</button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-danger dropdown-toggle dropdown-toggle-split\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <span class=\"sr-only\">Toggle Dropdown</span>\n                </button>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\">Action</a>\n                  <a class=\"dropdown-item\">Another action</a>\n                  <a class=\"dropdown-item\">Something else here</a>\n                  <div class=\"dropdown-divider\"></div>\n                  <a class=\"dropdown-item\">Separated link</a>\n                </div>\n              </div>\n              <!-- /btn-group -->\n            </div>\n\n            <!-- Forms -->\n            <!-- https://getbootstrap.com/docs/4.5/components/forms/ -->\n            <div class=\"mt-3\">\n              <form>\n                <div class=\"form-group\">\n                  <label for=\"exampleInputEmail1\">Form label</label>\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"exampleInputEmail1\"\n                    aria-describedby=\"emailHelp\"\n                    placeholder=\"Enter email\"\n                  />\n                  <small id=\"emailHelp\" class=\"form-text text-muted\"\n                    >Form Text - To give hints and things</small\n                  >\n                </div>\n              </form>\n            </div>\n\n            <div class=\"mt-2\">\n              <div class=\"form-group form-check\">\n                <input\n                  type=\"checkbox\"\n                  class=\"form-check-input\"\n                  id=\"exampleCheck1\"\n                />\n                <label class=\"form-check-label\" for=\"exampleCheck1\"\n                  >Check me out</label\n                >\n              </div>\n\n              <div class=\"form-check\">\n                <input\n                  class=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"exampleRadios\"\n                  id=\"exampleRadios1\"\n                  value=\"option1\"\n                  checked\n                />\n                <label class=\"form-check-label\" for=\"exampleRadios1\">\n                  Default radio\n                </label>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlSelect1\">Example select</label>\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                </select>\n              </div>\n            </div>\n\n            <div class=\"mt-2\">\n              <div class=\"form-group\">\n                <label for=\"exampleFormControlFile1\">Example file input</label>\n                <input\n                  type=\"file\"\n                  class=\"form-control-file\"\n                  id=\"exampleFormControlFile1\"\n                />\n              </div>\n            </div>\n\n            <!-- Input group -->\n            <!-- https://getbootstrap.com/docs/4.5/components/input-group/ -->\n            <div class=\"mt-2\">\n              <div class=\"input-group mb-3\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </div>\n\n              <div class=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Recipient's username\"\n                  aria-label=\"Recipient's username\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon2\"\n                    >@example.com</span\n                  >\n                </div>\n              </div>\n\n              <label for=\"basic-url\">Your vanity URL</label>\n              <div class=\"input-group mb-3\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon3\"\n                    >https://example.com/users/</span\n                  >\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"basic-url\"\n                  aria-describedby=\"basic-addon3\"\n                />\n              </div>\n\n              <div class=\"input-group mb-3\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">$</span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  aria-label=\"Amount (to the nearest dollar)\"\n                />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">.00</span>\n                </div>\n              </div>\n\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">With textarea</span>\n                </div>\n                <textarea\n                  class=\"form-control\"\n                  aria-label=\"With textarea\"\n                ></textarea>\n              </div>\n            </div>\n\n            <!-- Pagination -->\n            <!-- https://getbootstrap.com/docs/4.5/components/pagination/ -->\n            <div class=\"mt-2\">\n              <nav aria-label=\"...\">\n                <ul class=\"pagination\">\n                  <li class=\"page-item disabled\">\n                    <span class=\"page-link\">Previous</span>\n                  </li>\n                  <li class=\"page-item\">\n                    <a class=\"page-link\">1</a>\n                  </li>\n                  <li class=\"page-item active\">\n                    <span class=\"page-link\">\n                      2\n                      <span class=\"sr-only\">(current)</span>\n                    </span>\n                  </li>\n                  <li class=\"page-item\">\n                    <a class=\"page-link\">3</a>\n                  </li>\n                  <li class=\"page-item\">\n                    <a class=\"page-link\">Next</a>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n\n            <!--Progress-->\n            <!-- https://getbootstrap.com/docs/4.5/components/progress/ -->\n            <div class=\"mt-2\">\n              <div class=\"progress\">\n                <div\n                  class=\"progress-bar bg-primary\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar bg-secondary\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar bg-success\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar bg-info\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar bg-warning\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar bg-danger\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar bg-light\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar bg-dark\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n              </div>\n\n              <div class=\"progress mt-2\">\n                <div\n                  class=\"progress-bar progress-bar-striped bg-primary\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar progress-bar-striped bg-secondary\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar progress-bar-striped bg-success\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar progress-bar-striped bg-info\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar progress-bar-striped bg-warning\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar progress-bar-striped bg-danger\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar progress-bar-striped bg-light\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n                <div\n                  class=\"progress-bar progress-bar-striped bg-dark\"\n                  role=\"progressbar\"\n                  style=\"width: 16%\"\n                  aria-valuenow=\"16\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n              </div>\n            </div>\n\n            <!-- Spinner -->\n            <!-- https://getbootstrap.com/docs/4.5/components/spinners/ -->\n            <div class=\"mt-2\">\n              <div class=\"spinner-border text-primary\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n              <div class=\"spinner-border text-secondary\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n              <div class=\"spinner-border text-success\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n              <div class=\"spinner-border text-danger\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n              <div class=\"spinner-border text-warning\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n              <div class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n              <div class=\"spinner-border text-light\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n              <div class=\"spinner-border text-dark\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-6\">\n            <!-- Modal -->\n            <!-- https://getbootstrap.com/docs/4.5/components/modal/ -->\n            <div class=\"mb-2\">\n              <!-- Button trigger modal -->\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                data-toggle=\"modal\"\n                data-target=\"#exampleModal\"\n              >\n                Launch demo modal\n              </button>\n\n              <!-- Modal -->\n              <div\n                class=\"modal fade\"\n                id=\"exampleModal\"\n                tabindex=\"-1\"\n                role=\"dialog\"\n                aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\"\n              >\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n                        Modal title\n                      </h5>\n                      <button\n                        type=\"button\"\n                        class=\"close\"\n                        data-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </div>\n                    <div class=\"modal-body\">...</div>\n                    <div class=\"modal-footer\">\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-secondary\"\n                        data-dismiss=\"modal\"\n                      >\n                        Close\n                      </button>\n                      <button type=\"button\" class=\"btn btn-primary\">\n                        Save changes\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!--Alerts-->\n            <!-- https://getbootstrap.com/docs/4.5/components/alerts/ -->\n            <!-- <div class=\"mb-2 alert alert-primary\" role=\"alert\">\n              This is a primary alert with\n              <a class=\"alert-link\">an example link</a>.\n            </div>\n            <div class=\"mb-2 alert alert-secondary\" role=\"alert\">\n              This is a secondary alert with\n              <a class=\"alert-link\">an example link</a>.\n            </div>\n            <div class=\"mb-2 alert alert-success\" role=\"alert\">\n              This is a success alert with\n              <a class=\"alert-link\">an example link</a>.\n            </div>\n            <div class=\"mb-2 alert alert-danger\" role=\"alert\">\n              This is a danger alert with\n              <a class=\"alert-link\">an example link</a>.\n            </div>\n            <div class=\"mb-2 alert alert-warning\" role=\"alert\">\n              This is a warning alert with\n              <a class=\"alert-link\">an example link</a>.\n            </div>\n            <div class=\"mb-2 alert alert-info\" role=\"alert\">\n              This is a info alert with\n              <a class=\"alert-link\">an example link</a>.\n            </div>\n            <div class=\"mb-2 alert alert-light\" role=\"alert\">\n              This is a light alert with\n              <a class=\"alert-link\">an example link</a>.\n            </div>\n            <div class=\"mb-2 alert alert-dark\" role=\"alert\">\n              This is a dark alert with\n              <a class=\"alert-link\">an example link</a>.\n            </div> -->\n\n            <!-- list-group -->\n            <!-- https://getbootstrap.com/docs/4.5/components/list-group/ -->\n            <!-- <div class=\"mt-2\">\n              <ul class=\"list-group\">\n                <li class=\"list-group-item list-group-item-primary\">\n                  Dapibus ac facilisis in\n                </li>\n                <li class=\"list-group-item list-group-item-secondary\">\n                  Cras justo odio\n                </li>\n                <li class=\"list-group-item list-group-item-success\">\n                  Dapibus ac facilisis in\n                </li>\n                <li class=\"list-group-item list-group-item-danger\">\n                  Porta ac consectetur ac\n                </li>\n                <li class=\"list-group-item list-group-item-warning\">\n                  Vestibulum at eros\n                </li>\n                <li class=\"list-group-item list-group-item-info\">\n                  Cras justo odio\n                </li>\n                <li class=\"list-group-item list-group-item-light\">\n                  Dapibus ac facilisis in\n                </li>\n                <li class=\"list-group-item list-group-item-dark\">\n                  Porta ac consectetur ac\n                </li>\n              </ul>\n            </div> -->\n\n            <!-- Cards -->\n            <!-- https://getbootstrap.com/docs/4.5/components/card/ -->\n            <div\n              class=\"card text-white bg-primary mb-2 d-inline-block\"\n              style=\"max-width: 18rem\"\n            >\n              <div class=\"card-header\">Header</div>\n              <div class=\"card-body\">\n                <h4 class=\"card-title\">Primary card title</h4>\n                <p class=\"card-text\">\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </p>\n              </div>\n            </div>\n            <div\n              class=\"card text-white bg-secondary mb-2 d-inline-block\"\n              style=\"max-width: 18rem\"\n            >\n              <div class=\"card-header\">Header</div>\n              <div class=\"card-body\">\n                <h4 class=\"card-title\">Secondary card title</h4>\n                <p class=\"card-text\">\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </p>\n              </div>\n            </div>\n            <div\n              class=\"card text-white bg-success mb-2 d-inline-block\"\n              style=\"max-width: 18rem\"\n            >\n              <div class=\"card-header\">Header</div>\n              <div class=\"card-body\">\n                <h4 class=\"card-title\">Success card title</h4>\n                <p class=\"card-text\">\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </p>\n              </div>\n            </div>\n            <div\n              class=\"card text-white bg-danger mb-2 d-inline-block\"\n              style=\"max-width: 18rem\"\n            >\n              <div class=\"card-header\">Header</div>\n              <div class=\"card-body\">\n                <h4 class=\"card-title\">Danger card title</h4>\n                <p class=\"card-text\">\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </p>\n              </div>\n            </div>\n            <div\n              class=\"card text-white bg-warning mb-2 d-inline-block\"\n              style=\"max-width: 18rem\"\n            >\n              <div class=\"card-header\">Header</div>\n              <div class=\"card-body\">\n                <h4 class=\"card-title\">Warning card title</h4>\n                <p class=\"card-text\">\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </p>\n              </div>\n            </div>\n            <div\n              class=\"card text-white bg-info mb-2 d-inline-block\"\n              style=\"max-width: 18rem\"\n            >\n              <div class=\"card-header\">Header</div>\n              <div class=\"card-body\">\n                <h4 class=\"card-title\">Info card title</h4>\n                <p class=\"card-text\">\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </p>\n              </div>\n            </div>\n            <div\n              class=\"card bg-light mb-2 d-inline-block\"\n              style=\"max-width: 18rem\"\n            >\n              <div class=\"card-header\">Header</div>\n              <div class=\"card-body\">\n                <h4 class=\"card-title\">Light card title</h4>\n                <p class=\"card-text\">\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </p>\n              </div>\n            </div>\n            <div\n              class=\"card text-white bg-dark mb-2 d-inline-block\"\n              style=\"max-width: 18rem\"\n            >\n              <div class=\"card-header\">Header</div>\n              <div class=\"card-body\">\n                <h4 class=\"card-title\">Dark card title</h4>\n                <p class=\"card-text\">\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </p>\n              </div>\n            </div>\n\n            <div>\n              <table class=\"table table-hover table-striped table-\">\n                <thead class=\"thead-dark\">\n                  <tr>\n                    <th>#</th>\n                    <th>Column</th>\n                    <th>Column</th>\n                    <th>Column</th>\n                    <th>Column</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td class=\"table-primary\">Content</td>\n                    <td class=\"table-secondary\">Content</td>\n                    <td class=\"table-success\">Content</td>\n                    <td class=\"table-danger\">Content</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td class=\"table-warning\">Content</td>\n                    <td class=\"table-info\">Content</td>\n                    <td class=\"table-light\">Content</td>\n                    <td class=\"table-dark\">Content</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td class=\"bg-primary\">Content</td>\n                    <td class=\"bg-secondary\">Content</td>\n                    <td class=\"bg-success\">Content</td>\n                    <td class=\"bg-danger\">Content</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td class=\"bg-warning\">Content</td>\n                    <td class=\"bg-info\">Content</td>\n                    <td class=\"bg-light\">Content</td>\n                    <td class=\"bg-dark\">Content</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</app-code-box>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "!environment"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ThemeBuilderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppServerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppShellComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BootstrapModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BootstrapComponent"
                        },
                        {
                            "name": "VariableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LdPromotionModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LdPromotionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CodeBoxComponent"
                        },
                        {
                            "name": "HighlightComponent"
                        },
                        {
                            "name": "ThemeHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CodeBoxComponent"
                        },
                        {
                            "name": "HighlightComponent"
                        },
                        {
                            "name": "ThemeHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ThemeBuilderModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-builder/src/app/bootstrap/bootstrap.component.ts",
                "type": "any"
            },
            {
                "name": "baseComponents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-builder/src/app/shared/shared.module.ts",
                "type": "[]",
                "defaultValue": "[\n  CommonModule,\n  FormsModule,\n  // ng-zorro\n  NzLayoutModule,\n  NzMenuModule,\n  NzIconModule,\n  NzDrawerModule,\n  NzButtonModule,\n  NzInputModule,\n  NzModalModule,\n  NzTabsModule,\n  // https://zefoy.github.io/ngx-color-picker/\n  ColorPickerModule,\n]"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-builder/src/app/shared/shared.module.ts",
                "type": "[]",
                "defaultValue": "[\n  CodeBoxComponent,\n  HighlightComponent,\n  ThemeHeaderComponent,\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-builder/src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-builder/src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "loaderStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-builder/src/app/services/dynamic-loader.service.ts",
                "type": "ExternalLink[]",
                "defaultValue": "[\n  // { name: 'css', src: 'https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css', integrity: 'sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I' },\n  { name: 'jquery', src: 'https://code.jquery.com/jquery-3.5.1.slim.min.js', integrity: 'sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' },\n  { name: 'popper', src: 'https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js', integrity: 'sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN' },\n  { name: 'bootstrap', src: 'https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js', integrity: 'sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV' },\n\n]"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "metaReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/index.ts",
                "type": "MetaReducer[]",
                "defaultValue": "!environment.production ? [] : []"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Prism",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-builder/src/app/shared/highlight/highlight.component.ts",
                "type": "any"
            },
            {
                "name": "providers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "type": "[]",
                "defaultValue": "[\n  { provide: NZ_I18N, useValue: en_US }\n]"
            },
            {
                "name": "providers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-builder/src/app/shared/shared.module.ts",
                "type": "[]",
                "defaultValue": "[\n]"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/index.ts",
                "type": "ActionReducerMap<State>",
                "defaultValue": "{\n  router: routerReducer,\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/theme-builder/src/app/bootstrap/bootstrap.component.ts": [
                {
                    "name": "$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-builder/src/app/bootstrap/bootstrap.component.ts",
                    "type": "any"
                }
            ],
            "projects/theme-builder/src/app/shared/shared.module.ts": [
                {
                    "name": "baseComponents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-builder/src/app/shared/shared.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  CommonModule,\n  FormsModule,\n  // ng-zorro\n  NzLayoutModule,\n  NzMenuModule,\n  NzIconModule,\n  NzDrawerModule,\n  NzButtonModule,\n  NzInputModule,\n  NzModalModule,\n  NzTabsModule,\n  // https://zefoy.github.io/ngx-color-picker/\n  ColorPickerModule,\n]"
                },
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-builder/src/app/shared/shared.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  CodeBoxComponent,\n  HighlightComponent,\n  ThemeHeaderComponent,\n]"
                },
                {
                    "name": "providers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-builder/src/app/shared/shared.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "projects/theme-builder/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-builder/src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/theme-builder/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-builder/src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ],
            "projects/theme-builder/src/app/services/dynamic-loader.service.ts": [
                {
                    "name": "loaderStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-builder/src/app/services/dynamic-loader.service.ts",
                    "type": "ExternalLink[]",
                    "defaultValue": "[\n  // { name: 'css', src: 'https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css', integrity: 'sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I' },\n  { name: 'jquery', src: 'https://code.jquery.com/jquery-3.5.1.slim.min.js', integrity: 'sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' },\n  { name: 'popper', src: 'https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js', integrity: 'sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN' },\n  { name: 'bootstrap', src: 'https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js', integrity: 'sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV' },\n\n]"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
                }
            ],
            "src/app/reducers/index.ts": [
                {
                    "name": "metaReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/index.ts",
                    "type": "MetaReducer[]",
                    "defaultValue": "!environment.production ? [] : []"
                },
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/index.ts",
                    "type": "ActionReducerMap<State>",
                    "defaultValue": "{\n  router: routerReducer,\n}"
                }
            ],
            "projects/theme-builder/src/app/shared/highlight/highlight.component.ts": [
                {
                    "name": "Prism",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-builder/src/app/shared/highlight/highlight.component.ts",
                    "type": "any"
                }
            ],
            "src/app/shared/shared.module.ts": [
                {
                    "name": "providers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  { provide: NZ_I18N, useValue: en_US }\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "projects/theme-builder/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/bootstrap/bootstrap.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BootstrapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/bootstrap/bootstrap.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/bootstrap/utils.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Utils",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/bootstrap/variable/variable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VariableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/ld-promotion/ld-promotion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LdPromotionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/services/dynamic-loader.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DynamicLoaderService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/services/dynamic-loader.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ExternalLink",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/services/dynamic-loader.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoadTemp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/services/dynamic-loader.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loaderStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/services/event.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EventService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/code-box/code-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/highlight/highlight.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HighlightComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/highlight/highlight.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Prism",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/models/custom-properties.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomProperties",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/models/custom-properties.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/models/storage.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Storage",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/models/storage.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StorageItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "baseComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "providers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/app/shared/theme-header/theme-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ThemeHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-builder/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app-shell/app-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "metaReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/pwa.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PwaService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "providers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}